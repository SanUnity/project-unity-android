apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'

ext.readProperty = { paramName ->
    if (project.hasProperty(paramName)) {
        return project.getProperties().get(paramName)
    } else {
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
        }
        return properties.getProperty(paramName)
    }
}

android {

    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        missingDimensionStrategy 'version', 'calibration'


        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        //BuildConfig data required for BlueTracer
        buildConfigField "String", "ORG", ORG
        buildConfigField "String", "STORE_URL", STORE_URL
        buildConfigField "String", "PRIVACY_URL", PRIVACY_URL
        buildConfigField "String", "FIREBASE_REGION", FIREBASE_REGION
        buildConfigField "int", "SERVICE_FOREGROUND_NOTIFICATION_ID", SERVICE_FOREGROUND_NOTIFICATION_ID
        buildConfigField "String", "SERVICE_FOREGROUND_CHANNEL_ID", SERVICE_FOREGROUND_CHANNEL_ID
        buildConfigField "String", "SERVICE_FOREGROUND_CHANNEL_NAME", SERVICE_FOREGROUND_CHANNEL_NAME
        buildConfigField "int", "PUSH_NOTIFICATION_ID", PUSH_NOTIFICATION_ID
        buildConfigField "String", "PUSH_NOTIFICATION_CHANNEL_NAME", PUSH_NOTIFICATION_CHANNEL_NAME
        buildConfigField "long", "SCAN_DURATION", SCAN_DURATION
        buildConfigField "long", "MIN_SCAN_INTERVAL", MIN_SCAN_INTERVAL
        buildConfigField "long", "MAX_SCAN_INTERVAL", MAX_SCAN_INTERVAL
        buildConfigField "long", "MAX_QUEUE_TIME", MAX_QUEUE_TIME
        buildConfigField "long", "BM_CHECK_INTERVAL", BM_CHECK_INTERVAL
        buildConfigField "long", "HEALTH_CHECK_INTERVAL", HEALTH_CHECK_INTERVAL
        buildConfigField "long", "PURGE_INTERVAL", PURGE_INTERVAL
        buildConfigField "long", "PURGE_TTL", PURGE_TTL
        buildConfigField "long", "CONNECTION_TIMEOUT", CONNECTION_TIMEOUT
        buildConfigField "long", "BLACKLIST_DURATION", BLACKLIST_DURATION
        buildConfigField "long", "ADVERTISING_DURATION", ADVERTISING_DURATION
        buildConfigField "long", "ADVERTISING_INTERVAL", ADVERTISING_INTERVAL
        buildConfigField "String", "V2_CHARACTERISTIC_ID", V2_CHARACTERISTIC_ID
        buildConfigField "String", "BLE_SSID", STAGING_SERVICE_UUID
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {

        centralized {
            dimension "default"
            versionName "2.1.0"
            versionCode 126
            applicationId "es.grupogo.covid19.ccaa"
            buildConfigField "String", "BT_TYPE", "\"CENTRALIZED\""
        }

        decentralized {
            dimension "default"
            versionName "2.1.0"
            versionCode 126
            applicationId "es.grupogo.covid19.ccaa"
            buildConfigField "String", "BT_TYPE", "\"DECENTRALIZED\""
        }

        exposure {
            dimension "default"
            versionName "2.1.0"
            versionCode 126
            applicationId "es.grupogo.covid19.ccaa"
            buildConfigField "String", "BT_TYPE", "\"DECENTRALIZED\""
        }
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: '../../dp3t-sdk/sdk/libs', include: ['*.aar'])

//    Uncomment to integrate DP3T without exposure notifications
    implementation project(':sdk')
//    Uncomment to integrate DP3T with exposure notifications
//    implementation project(':sdk_exposure')


    def versions_room = "2.2.5"
    def versions_koin = "2.1.1"
    def retrofit_version = '2.5.0'
    def anko_version = '0.10.8'
    def loginInterceptor_version = '3.8.1'


    // Android Basics
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.fragment:fragment:1.2.5'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-rc1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01"
    implementation 'com.jakewharton:butterknife:10.2.1'

//    implementation "com.github.parse-community.Parse-SDK-Android:fcm:$parse_version"
    implementation "androidx.core:core-ktx:1.3.1"
    implementation "androidx.room:room-runtime:$versions_room"
    kapt "androidx.room:room-compiler:$versions_room"

//    RxBLE BlueTracer main library
//    This library has to be commented if we're using exposure notifications
//    Uncomment when using centralized flavour
//    implementation "com.polidea.rxandroidble2:rxandroidble:1.10.1"

    //RxPermisssions
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    // Koin for Android
    implementation "org.koin:koin-android:$versions_koin"
    implementation "org.koin:koin-androidx-scope:$versions_koin"
    implementation "org.koin:koin-androidx-viewmodel:$versions_koin"

    // Room components
    def room_version = "2.2.3"
    implementation "com.google.android.material:material:1.3.0-alpha02"

    def archLifecycleVersion = "2.2.0"

    //bottom navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation group: 'androidx.localbroadcastmanager', name: 'localbroadcastmanager', version: '1.1.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.hbb20:ccp:2.3.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'


    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"

    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'


    //bottom navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'

    //cardview
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.guava:guava:28.2-android'

    //Lottie
    implementation 'com.airbnb.android:lottie:3.4.0'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$loginInterceptor_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"


    // Add the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation 'com.google.firebase:firebase-core:17.5.0'
    implementation 'com.google.firebase:firebase-messaging:20.2.4'

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'

    //To detect if a device is rooted
    implementation 'com.scottyab:rootbeer-lib:0.0.8'
    implementation 'androidx.security:security-crypto:1.1.0-alpha02'
    implementation 'eu.chainfire:libsuperuser:1.1.0.+'

    testImplementation 'junit:junit:4.13'

}
repositories {
    mavenCentral()
}
